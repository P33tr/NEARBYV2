@using NearX.Models
@inject IDialogService _dialogService;

<MudDialog>
    <TitleContent>
        <MudIcon Icon="@Icons.Material.Filled.LocalCafe"></MudIcon>
    </TitleContent>
    <DialogContent>
        <MudTable Items="@cafe.TagsList">
            <RowTemplate>
                <MudTd>@context.Name</MudTd>
                @if(@context.IsLink)
                {
                    <MudTd><MudLink Href="@context.Value" Target="_blank">@context.Value</MudLink></MudTd>
                }
                else
                {
                    <MudTd>@context.Value</MudTd>
                }
            </RowTemplate>
        </MudTable>
        <MudFab 
            Color="Color.Secondary" 
            Icon="@Icons.TwoTone.RateReview" 
            Size="Size.Small" 
            IconSize="Size.Small" 
            Label="Add Review"
                OnClick="ShowReviewDialog"></MudFab>
    </DialogContent>
    <DialogActions>
        <MudFab 
            Color="Color.Secondary" 
            Icon="@Icons.TwoTone.Close" 
            Size="Size.Small" 
            IconSize="Size.Small" 
            Label="Close"
            OnClick="Close"></MudFab>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Element cafe { get; set; } = new Element();


    void Close() => MudDialog.Close(DialogResult.Ok(true));

    public void ShowReviewDialog(MouseEventArgs args)
    {
        Console.WriteLine($"Cafe id is {cafe.id}");
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.Medium };
        var parameters = new DialogParameters()
        {
            ["cafe"] = cafe
        };
        _dialogService.Show<ReviewComponent>("Cafe", parameters, options);
    }
}


