@* Client/Shared/AccessControl.razor *@
@*@inject StateContainer StateContainer*@
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>@*@StateContainer.UserId*@
        Hello, @context.User.Identity.Name!
        <MudButton @onclick="BeginSignOut">Log out</MudButton>
    </Authorized>
    <NotAuthorized>
        <MudButton @onclick="BeginSignIn">Log in</MudButton>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
    private async Task BeginSignIn(MouseEventArgs args)
    {
        Navigation.NavigateTo("authentication/login");
    }

    //protected override void OnInitialized()
    //{
    //    StateContainer.OnChange += StateHasChanged;
    //}
    //public void Dispose()
    //{
    //    StateContainer.OnChange -= StateHasChanged;
    //}
}
